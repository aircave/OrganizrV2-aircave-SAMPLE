################################################################################################################
#////////////////////////////////////////////////SERVER BLOCK\\\\\\\\\\\\\\\\\\\\\\\\\#
################################################################################################################

# Redirect HTTP traffic to HTTPS
server {
	listen 80; # Default listen port
	server_name    MYDOMAIN.com;
	return 301 https://$server_name$request_uri;
}
################################################################################################################
#////////////////////////////////////////////////MAIN SERVER BLOCK\\\\\\\\\\\\\\\\\\\\\\#
################################################################################################################

# MAIN SERVER BLOCK
server {
	listen 443 ssl default_server;		
	server_name MYDOMAIN.com; #CHANGE THIS TO YOUR DOMAIN NAME!

## READ THE COMMENT ON add_header X-Frame-Options AND add_header Content-Security-Policy IF YOU USE THIS ON A SUBDOMAIN YOU WANT TO IFRAME!

### intermediate configuration per ssl-config.mozilla.org
	ssl_protocols TLSv1.2 TLSv1.3;

## Certificates from LE container placement
	ssl_certificate /config/keys/letsencrypt/fullchain.pem;
	ssl_certificate_key /config/keys/letsencrypt/privkey.pem;
	ssl_dhparam /config/nginx/dhparams.pem; # Diffieâ€“Hellman Bit value: 4096
	ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
	ssl_prefer_server_ciphers on; 

## For Strong Security recommended settings see cipherli.st
	ssl_ecdh_curve secp384r1; # Requires nginx >= 1.1.0
	ssl_session_timeout 1d;
	ssl_session_cache shared:MozSSL:10m;  # about 40000 sessions
	ssl_stapling on; # Requires nginx >= 1.3.7
	ssl_stapling_verify on; # Requires nginx => 1.3.7

# LOCAL IP ALLOW GEO BLOCK
    if ($lan-ip = yes) {
    set $allowed_country yes;
    }
    
# COUNTRY GEO BLOCK 
    if ($allowed_country = no) {
    return 444;
    }
	
## NOTE: The add_header Content-Security-Policy won't work with duckdns since you don't own the root domain. Just buy a domain. It's cheap
## Settings to add strong security profile (A+ on securityheaders.io/ssllabs.com)
## Source: https://github.com/gilbN/Nostromo/blob/master/Server/nginx/strong-ssl.conf

proxy_set_header X-Forwarded-Proto https;
proxy_redirect  http://  $scheme://;
add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload";
add_header X-Content-Type-Options nosniff;
add_header X-XSS-Protection "1; mode=block";
add_header X-Robots-Tag none; #SET THIS TO index IF YOU WANT GOOGLE TO INDEX YOU SITE!
add_header Content-Security-Policy "frame-ancestors https://*.$server_name https://$server_name"; # Add your domains you want to enable iframing on. Use sub-strong-ssl.conf on subdomains you want to iframe.
add_header X-Frame-Options SAMEORIGIN;
add_header Referrer-Policy "strict-origin-when-cross-origin";
add_header Feature-Policy "geolocation none;midi none;notifications none;push none;sync-xhr none;microphone none;camera none;magnetometer none;gyroscope none;speaker self;vibrate none;fullscreen self;payment none;";
proxy_cookie_path / "/; HTTPOnly; Secure"; ##NOTE: This may cause issues with unifi. Remove HTTPOnly; or create another ssl config for unifi.
more_set_headers "Server: Classified";
more_clear_headers 'X-Powered-By';

#Organizr V2 Custom Error Pages - DO NOT USE IF USING htpasswd file i.e. for DELUGE NZB360 APP ACCESS
	error_page 401 https://MYDOMAIN.COM/?error=$status&return=$scheme://$server_name$request_uri;
   	error_page 400 402 403 404 405 408 502 503 504  https://MYDOMAIN.COM/?error=$status;
	proxy_intercept_errors on; #For custom Organizr error pages. This may give you issues with the /plex location. Just add a proxy_intercept_errors off; in the location block"
	error_page 500 https://MYDOMAIN.COM/?error=401&return=$scheme://$server_name$request_uri;	

	
#AUTHORIZATION BLOCK 
location ~ /auth-(.*) {
 internal;
 proxy_pass http://[UNRAID_IP]:81/api/?v1/auth&group=$1;
 proxy_set_header Content-Length "";
}

#ORGANIZR CONTAINER
location / {
proxy_pass http://[UNRAID_IP]:81;
include /config/nginx/proxy.conf;
}


################################################################################################################
#////////////////////////////////////////////////SUBDIRECTORIES\\\\\\\\\\\\\\\\\\\\\\\\#
################################################################################################################
#Add auth_basic for container block to use popup passsword. This may break custom error pages and other things
#auth_basic "Restricted";
#auth_basic_user_file /config/nginx/.htpasswd;
###Organizr auth - For server-auth with Organizr, remove unless you use Organi
## To utilize the block drop "auth_request /auth-x;" within your location block, where x=OrgV2 group_id
	#auth_request /auth-0;   #=Admin
	#auth_request /auth-1;   #=Co-Admin 
	#auth_request /auth-2;   #=Super User 
	#auth_request /auth-3;   #=Power User 
	#auth_request /auth-4;   #=User 
	#auth_request /auth-999; #=Guest

# PLEX CONTAINER - Reverse Proxy
location /plex {
    return 301 $scheme://$host/plex/;
 }
location ^~ /plex/ {
	auth_request /auth-4;
	rewrite /plex(.*) $1 break;
    proxy_pass http://[UNRAID_IP]:32400;
    proxy_intercept_errors off;
    proxy_set_header X-Plex-Client-Identifier $http_x_plex_client_identifier;
    proxy_set_header X-Plex-Device $http_x_plex_device;
    proxy_set_header X-Plex-Device-Name $http_x_plex_device_name;
    proxy_set_header X-Plex-Platform $http_x_plex_platform;
    proxy_set_header X-Plex-Platform-Version $http_x_plex_platform_version;
    proxy_set_header X-Plex-Product $http_x_plex_product;
    proxy_set_header X-Plex-Token $http_x_plex_token;
    proxy_set_header X-Plex-Version $http_x_plex_version;
    proxy_set_header X-Plex-Nocache $http_x_plex_nocache;
    proxy_set_header X-Plex-Provides $http_x_plex_provides;
    proxy_set_header X-Plex-Device-Vendor $http_x_plex_device_vendor;
    proxy_set_header X-Plex-Model $http_x_plex_model;
 }
	if ($http_referer ~* /plex) {
    rewrite ^/web/(.*) /plex/web/$1? redirect;
}

#NZBGET CONTAINER - Reverse Proxy
location /nzbget {
	auth_request /auth-4;
	proxy_pass http://[UNRAID_IP]:6789;
	include /config/nginx/proxy.conf;
		proxy_set_header Accept-Encoding "";
		sub_filter
		'</head>'
		'<link rel="stylesheet" type="text/css" href="https://gilbn.github.io/theme.park/CSS/themes/nzbget/plex.css">
		</head>';
		sub_filter_once on;
}

# NZBGET ALLOW API FOR NZB360 MOBILE APP
	location /nzbget/api { #Base url can be anything you want
	proxy_pass http://[UNRAID_IP]:6789/xmlrpc;
	include /config/nginx/proxy.conf; 
}  

# Transmission Reverse proxy
location /transmission {
	auth_request /auth-4;
	proxy_pass http://[UNRAID_IP]:9091;
	proxy_set_header Host $host;
	proxy_set_header X-Real-IP $remote_addr;
	proxy_set_header X-Forwarded-Host $server_name;
	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	proxy_intercept_errors off;
}

# Transmission ALLOW API FOR NZB360 MOBILE APP
location /transmission/rpc { #Base url can be anything you want
	auth_request off;
	proxy_pass http://[UNRAID_IP]:9091/transmission/rpc;
	proxy_intercept_errors off; #Needed?
}

# Deluge Reverse proxy - does not require a base url setting
location /deluge {
	auth_request /auth-4;
    proxy_pass http://192.168.1.206:8112/;
# 	proxy_set_header Host $host; #Needed?
# 	proxy_intercept_errors off; #Needed?
    proxy_set_header X-Deluge-Base "/deluge/";
    add_header X-Frame-Options SAMEORIGIN;
	include /config/nginx/proxy.conf; 
}

#SONARR CONTAINER - Reverse Proxy
location /sonarr {
	auth_request /auth-4;
	proxy_pass http://[UNRAID_IP]:8989/sonarr;
	include /config/nginx/proxy.conf;
		proxy_set_header Accept-Encoding "";
		sub_filter
		'</head>'
		'<link rel="stylesheet" type="text/css" href="https://gilbn.github.io/theme.park/CSS/themes/sonarr/plex.css">
		</head>';
		sub_filter_once on;
}

# SONARR ALLOW API FOR NZB360 MOBILE APP
location /sonarr/api {
	proxy_pass http://[UNRAID_IP]:8989/sonarr/api;
	include /config/nginx/proxy.conf; 
}

#RADARR CONTAINER - Reverse Proxy
location /radarr {
	auth_request /auth-4;
	proxy_pass http://[UNRAID_IP]:9057/radarr;
	include /config/nginx/proxy.conf;
		proxy_set_header Accept-Encoding "";
		sub_filter
		'</head>'
		'<link rel="stylesheet" type="text/css" href="https://gilbn.github.io/theme.park/CSS/themes/radarr/plex.css">
		</head>';
		sub_filter_once on;
}

# RADARR ALLOW API FOR NZB360 MOBILE APP
location /radarr/api {
	proxy_pass http://[UNRAID_IP]:9057/radarr/api;
	include /config/nginx/proxy.conf; 
}

#LIDARR CONTAINER - Reverse Proxy
location /lidarr {
	auth_request /auth-4;
	proxy_pass http://[UNRAID_IP]:8686/lidarr;
	include /config/nginx/proxy.conf;
		proxy_set_header Accept-Encoding "";
		sub_filter
		'</head>'
		'<link rel="stylesheet" type="text/css" href="https://gilbn.github.io/theme.park/CSS/themes/lidarr/plex.css">
		</head>';
		sub_filter_once on;
}

#LIBRARY CONTAINER - Reverse Proxy
location /library {
	auth_request /auth-4;
	proxy_pass http://[UNRAID_IP]:5299/library;
	include /config/nginx/proxy.conf;
}

# LIDARR ALLOW API FOR NZB360 MOBILE APP
location /lidarr/api {
	proxy_pass http://[UNRAID_IP]:8686/lidarr/api;
	include /config/nginx/proxy.conf; 
}

#JACKETT CONTAINER - Reverse Proxy
location /jackett/ {
	auth_request /auth-0;
	proxy_pass         http://[UNRAID_IP]:9117;
	proxy_http_version 1.1;
	proxy_set_header   Upgrade $http_upgrade;
	proxy_set_header   Connection keep-alive;
	proxy_cache_bypass $http_upgrade;
	proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
	proxy_set_header   X-Forwarded-Proto $scheme;
	proxy_set_header   X-Forwarded-Host $http_host;
		proxy_set_header Accept-Encoding "";
		sub_filter
		'</head>'
		'<link rel="stylesheet" type="text/css" href="https://gilbn.github.io/theme.park/CSS/themes/jackett/plex.css">
		</head>';
		sub_filter_once on;
	#include /config/nginx/proxy.conf; 
}

# OMBI v3 CONTAINER - Reverse proxy
location /ombi {
	auth_request /auth-4;
	proxy_pass http://[UNRAID_IP]:3579/ombi;
	proxy_http_version 1.1;
	proxy_set_header Upgrade $http_upgrade;
	proxy_set_header Connection keep-alive;
	proxy_set_header Host $host;
	proxy_cache_bypass $http_upgrade;
		proxy_set_header Accept-Encoding "";
		sub_filter
		'</head>'
		'<link rel="stylesheet" type="text/css" href="https://gilbn.github.io/theme.park/CSS/themes/sonarr/plex.css">
		</head>';
		sub_filter_once on;
}
	
# OMBI ALLOW API FOR NZB360 MOBILE APP
#	location /ombi/api { 
#	auth_request off;
#	proxy_pass http://[UNRAID_IP]:3579/ombi/api;
#}

#GUACAMOLE CONTAINER - Reverse Proxy
location /guacamole {
	auth_request /auth-4;
	proxy_pass http://[UNRAID_IP]:8080/guacamole;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_buffering off;
	proxy_http_version 1.1; #not needed?
	proxy_set_header Upgrade $http_upgrade;
    access_log off;
		proxy_set_header Accept-Encoding "";
		sub_filter
		'</head>'
		'<link rel="stylesheet" type="text/css" href="https://gilbn.github.io/theme.park/CSS/themes/guacamole/plex.css">
		</head>';
		sub_filter_once on;
}
	
# Robots.txt disallow all with nginx. Please this in the root dir of LetsEncrypt
location = /robots.txt {
	add_header  Content-Type  text/plain;
	return 200 "User-agent: *\nDisallow: /\n";
   }
}


